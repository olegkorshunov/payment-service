version: '3.4'

services:
  app:
    build:
      context: .
    image: payment-service
    ports:
      - 8000:8000
    volumes:
      - .:/opt/payment-service
    environment:
      APP_DEBUG: 1

    command: ["start-reload"]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

    env_file:
      - .env

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    command: redis-server --requirepass ${REDIS_PASSWORD}

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:13
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: local
      POSTGRES_PASSWORD: local
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "local" ]
      interval: 5s
      timeout: 30s
      start_period: 40s
      retries: 10

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "472"
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasource.yml
    env_file:
      - ./config.monitoring
